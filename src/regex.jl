# regular expressions (type Regex)- Perl compatible
# see www.pcre.org
# Regex common escape sequences - table
# \a   An alarm bell
# \c?  The control character you specify for ?
# \d   A digit between 0 and 9
# \D   A non digit character
# \e   The character generated by pressing escape
# \E   The end of an \L or \U sequence
# \f   A form feed
# \l   The next lower case character
# \L   The next lower case characters until \E
# \n   A new line of data
# \Q   The next metacharacter until \E is found
# \r   a carriage return
# \s   A whitespace character
# \S   A non-white space character
# \t   A tab
# \u   The next Uppercase character
# \U   The next uppercase characters until \E
# \w   A word character (alphanumeric characters or underscores)
# \W   A non-word characters
# \O?  The octal character you specify for ?
# \x?  The hexadecimal character you specify for ?

# Other metacharacters
# ^    Match at beginning of String
# $    Match at end of String
# +    1 or more of preceding type
# *    0 or more of preceding type
# [?-?]  match range, eg. [A-G], [1-5] and [A-Za-z]

# Test to make sure password not all alpha

i=0
while(i==0)
    global i
    passwd="testAAasdqgaspdjphAasfqAasf"
    if match(r"^[A-Za-zα-ω]*$",passwd) != nothing
        println("all alpha, try again")
        break
    else
        println("password good")
        i=1
    end
end

# pick time out of text
linewithtime = "a good holiday weekend, its 15:45 and sunny."
m = match(r"(?<hour>\d+):(?<minute>\d+)",linewithtime)
println(m[:hour]*":"*m[:minute])

# For more read Redex Cheat Sheet at:
#   www.rexegg.com/regex-quickstart.html
